<%- include('partials/videosHeader'); -%>

<div class="relative flex min-h-full flex-1 flex-col justify-center px-6 py-9 lg:px-8">
  <div class="absolute inset-0 bg-black opacity-50"></div>
  <div class="relative sm:mx-auto sm:w-full sm:max-w-sm bg-white p-8 rounded-lg shadow-lg">
    <div class="mt-5 text-center">
      <h1 class="text-4xl font-bold text-gray-900">Signup</h1>
    </div>
    <h2 class="mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900">
      Create a new account
    </h2>
    <div class="mt-10 sm:mx-auto sm:w-full sm:max-w-sm">
      <form id="signupForm" class="space-y-6">
        <div>
          <label for="username" class="block text-sm font-medium leading-6 text-gray-900">
            Username
          </label>
          <div class="mt-2">
            <input type="text" id="username" name="username" class="block w-full rounded-md border-0 py-1.5 px-3 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 outline-none focus:ring-2 focus:ring-inset focus:ring-orange-500 sm:text-sm sm:leading-6" required />
            <div class="username error text-red-500 text-sm mt-1"></div>
          </div>
        </div>
        <div>
          <label for="email" class="block text-sm font-medium leading-6 text-gray-900">
            Email
          </label>
          <div class="mt-2">
            <input type="email" id="email" name="email" class="block w-full rounded-md border-0 py-1.5 px-3 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 outline-none focus:ring-2 focus:ring-inset focus:ring-orange-500 sm:text-sm sm:leading-6" required />
            <div class="email error text-red-500 text-sm mt-1"></div>
          </div>
        </div>
        <div>
          <label for="password" class="block text-sm font-medium leading-6 text-gray-900">
            Password
          </label>
          <div class="mt-2">
            <input type="password" id="password" name="password" class="block w-full rounded-md border-0 py-1.5 px-3 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 outline-none focus:ring-2 focus:ring-inset focus:ring-orange-500 sm:text-sm sm:leading-6" required />
            <div class="password error text-red-500 text-sm mt-1"></div>
          </div>
        </div>
        <div class="mt-5 mb-6">
          <button type="submit" class="flex w-full justify-center rounded-md bg-orange-500 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-orange-600 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-orange-600">Signup</button>
        </div>
        <p class="text-gray-700 text-sm text-center">
          Already have an account?
          <a href="/login" class="text-gray-900 font-medium hover:underline">Login here</a>
        </p>
      </form>
      <p class="my-5 text-center text-gray-900">or continue with</p>
      <div class="my-4 flex justify-between gap-5 items-center">
        <button class="w-[200px] flex justify-center items-center gap-2 font-semibold text-gray-900 text-lg border border-gray-300 p-2">
          <img src="/google.png" alt="Google" class="w-[30px]" />
          Google
        </button>
        <button class="w-[200px] flex justify-center items-center gap-2 font-semibold text-gray-900 text-lg border border-gray-300 p-2">
          Github
          <img src="/github.png" alt="Github" class="w-[30px]" />
        </button>
      </div>
    </div>
  </div>
</div>  
</body>
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById("signupForm");
    form.addEventListener("submit", async (e) => {
      e.preventDefault();

      const username = form.username.value;
      const email = form.email.value;
      const password = form.password.value;

      try {
        const response = await fetch("/signup", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ username, email, password }),
        });

        if (!response.ok) {
          const data = await response.json();
          throw new Error(data.message);
        }

        // If signup is successful, redirect to login page or show success message
        window.location.href = "/login";
      } catch (error) {
        console.error(error);
        const usernameError = document.querySelector(".username.error");
        const emailError = document.querySelector(".email.error");
        const passwordError = document.querySelector(".password.error");
        usernameError.textContent = "";
        emailError.textContent = "";
        passwordError.textContent = "";
        if (error.message.includes("username")) {
          usernameError.textContent = error.message;
        } else if (error.message.includes("email")) {
          emailError.textContent = error.message;
        } else if (error.message.includes("password")) {
          passwordError.textContent = error.message;
        } else {
          alert("An error occurred. Please try again later.");
        }
      }
    });
  });
</script>
</html>
